{
  "name": "grunt-tv4",
  "description": "Use tv4 to validate files against json-schema draft v04",
  "version": "0.1.3",
  "homepage": "https://github.com/Bartvds/grunt-tv4",
  "author": {
    "name": "Bart van der Schoor",
    "url": "https://github.com/Bartvds"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Bartvds/grunt-tv4"
  },
  "bugs": {
    "url": "https://github.com/Bartvds/grunt-tv4/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/Bartvds/grunt-tv4/blob/master/LICENSE-MIT"
    }
  ],
  "keywords": [
    "gruntplugin",
    "json",
    "json-schema",
    "tv4"
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "tv4": "~1.0.5",
    "jsonpointer.js": "~0.3.0",
    "request": "~2.25.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-cli": "~0.1",
    "grunt": "~0.4.1",
    "grunt-contrib-connect": "~0.3.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "# grunt-tv4\r\n\r\n[![Build Status](https://secure.travis-ci.org/Bartvds/grunt-tv4.png?branch=master)](http://travis-ci.org/Bartvds/grunt-tv4) [![Dependency Status](https://gemnasium.com/Bartvds/grunt-tv4.png)](https://gemnasium.com/Bartvds/grunt-tv4) [![NPM version](https://badge.fury.io/js/grunt-tv4.png)](http://badge.fury.io/js/grunt-tv4)\r\n\r\n> Use grunt and [Tiny Validator tv4](https://github.com/geraintluff/tv4) to validate files against [json-schema](http://json-schema.org/) draft v04\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\n$ npm install grunt-tv4 --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-tv4');\r\n```\r\n\r\n## The \"tv4\" task\r\n\r\n### Notes\r\n\r\n* Uses [Tiny Validator tv4 ](https://github.com/geraintluff/tv4) so schemas must conform to [json-schema draft v04](http://json-schema.org/documentation.html),\r\n* As of version 0.1.2 there is support for automatically loading remote references by URI. See the [JSON Schema](http://json-schema.org/) documentation on how to use `$ref`. \r\n\r\n### Default Options\r\n\r\n```js\r\ngrunt.initConfig({\r\n  tv4: {\r\n    myTarget: {\r\n      //specify single schemas and multiple data to validate\r\n      files: {\r\n        'schema/format.json': ['data/alpha.json', 'data/beta.json'],\r\n        'http://example.com/schema/v1': ['data/alpha.json', 'data/beta.json']\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n### Advanced Options\r\n\r\n```js\r\ngrunt.initConfig({\r\n  tv4: {\r\n    //use global options\r\n    options: {\r\n      //show multiple errors per file (off by default)\r\n      multi: true,\r\n      //create a new tv4 instance for every target (off by default)\r\n      fresh: true,\r\n      //pre register extra schemas by URI\r\n      schemas: {\r\n        'http://example.com/schema/v1': grunt.file.readJSON('schema/v1.json'),\r\n        'http://example.com/schema/v2': grunt.file.readJSON('schema/v2.json')\r\n      }\r\n    },\r\n    myTarget: {\r\n      files: {\r\n        //use glob and other standard selector options\r\n        'schema/map.json': ['data/map_*.json'],\r\n        'http://example.com/schema/v1': ['**/lib_*.json']\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n## History\r\n\r\n* 0.1.3 - Support for loading remote references (JSON Schema's `$ref`).\r\n* 0.1.1 - Bugfixes and improved reporting\r\n* 0.1.0 - First release with synchronous validation\r\n\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-tv4@0.1.3",
  "dist": {
    "shasum": "75fcad967923550e0ba6575948d51b2e910dd01b"
  },
  "_from": "grunt-tv4@*",
  "_resolved": "https://registry.npmjs.org/grunt-tv4/-/grunt-tv4-0.1.3.tgz"
}
