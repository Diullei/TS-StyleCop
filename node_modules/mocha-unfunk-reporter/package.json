{
  "name": "mocha-unfunk-reporter",
  "version": "0.2.0",
  "description": " Mocha console reporter without funkyness",
  "author": {
    "name": "Bart van der Schoor",
    "email": "bartvanderschoor@gmail.com"
  },
  "homepage": "https://github.com/Bartvds/mocha-unfunk-reporter",
  "repository": {
    "type": "git",
    "url": "https://github.com/Bartvds/mocha-unfunk-reporter.git"
  },
  "bugs": {
    "url": "https://github.com/Bartvds/mocha-unfunk-reporter/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/Bartvds/mocha-unfunk-reporter/blob/master/LICENSE-MIT"
    }
  ],
  "keywords": [
    "mocha",
    "reporter",
    "windows",
    "tools",
    "console",
    "unfunk"
  ],
  "main": "build/unfunk.js",
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {},
  "devDependencies": {
    "underscore": "~1.4.4",
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.9",
    "grunt-typescript": "~0.1.5",
    "grunt-contrib-clean": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.0",
    "jshint-path-reporter": "~0.1.0",
    "grunt-mocha": "git://github.com/Bartvds/grunt-mocha",
    "grunt-mocha-spawn": "~0.1.0",
    "grunt-mocha-test": "~0.4.0",
    "grunt-simple-mocha": "~0.4.0",
    "mocha": "~1.11.0",
    "grunt-shell": "~0.3.0",
    "chai": "~1.6.0",
    "proclaim": "~1.4.0",
    "grunt-wait": "~0.1.0",
    "source-map-support": "~0.1.8"
  },
  "readme": "# mocha-unfunk-reporter\r\n[![Build Status](https://secure.travis-ci.org/Bartvds/mocha-unfunk-reporter.png?branch=master)](http://travis-ci.org/Bartvds/mocha-unfunk-reporter) [![Dependency Status](https://gemnasium.com/Bartvds/mocha-unfunk-reporter.png)](https://gemnasium.com/Bartvds/mocha-unfunk-reporter) [![NPM version](https://badge.fury.io/js/mocha-unfunk-reporter.png)](http://badge.fury.io/js/mocha-unfunk-reporter)\r\n\r\n> Mocha console reporter without funkyness\r\n\r\n## What?\r\n\r\nThis is a `Spec`-style console reporter for [mocha](http://visionmedia.github.io/mocha/) that doesn't confuse lesser console environments with funky display modes, cursor tricks or weird control characters and won't use `stderr`.\r\n\r\nMain use-case is running mocha's in basic console views embedded in some IDE's or setups with text buffered output. The default config uses only some ANSI console color codes and writes with console.log() but has option to be tuned for your unfunky use case.\r\n\r\n### Notes\r\n* The reporter does *not* extend mocha's default Base prototype because that is a main source of funkyness. This means not all of mocha's reporter features are supported.\r\n\r\n* There are many features to ease testing usability, like aggressive attempts at getting a sensible error message or a stack filter that attempts to compact the stack trace by dropping mocha functions calls.\r\n\r\n### Diff\r\n\r\n* String-diff powered by [JsDiff](https://github.com/kpdecker/jsdiff), rendering even supports colorless display! \r\n* Object-diff tree powered by [objectDiff](https://github.com/NV/objectDiff.js). Currently maybe even stricter then your assertions!\r\n\r\n## Usage\r\nInstall from npm:\r\n\r\n````\r\n$ npm install mocha-unfunk-reporter\r\n```` \r\n\r\nThen use `'mocha-unfunk-reporter'` as `reporter` parameter in your favorite mocha runner. For example in `grunt-mocha-test`:\r\n\r\n````js\r\ngrunt.initConfig({\r\n\t// ...\r\n\tmochaTest: {\r\n\t\toptions: {\r\n\t\t\treporter: 'mocha-unfunk-reporter'\r\n\t\t},\r\n\t\tany: {\r\n\t\t\tsrc: ['test/_tmp.test.js']\r\n\t\t}\r\n\t}\r\n});\r\n````\r\n\r\n### Options\r\n\r\nThere are multiple ways to pass globals:\r\n\r\n````js\r\n//on env with prefixed name\r\nprocess.env['mocha-unfunk-<option_name>'] = <option_value>;\r\n\r\n//on module using .option() method\r\nrequire('mocha-unfunk-reporter').option('<option_name>', <option_value>);\r\n\r\n//also in bulk\r\nrequire('mocha-unfunk-reporter').option({<name>: <value>, <name>: <value>});\r\n````\r\n\r\nReport styling: `style`\r\n\r\n* `'ansi'` - plain with ansi color codes (default)\r\n* `'plain'` - plain text\r\n* `'html'` - html span's with css colors\r\n* `'css'` - html span's with css classes\r\n\r\nOutput mode: `writer` \r\n\r\n* `'log'` - buffer and stream per line to `console.log()` (default)\r\n* `'stdio'` - stream to `process.stdout`\r\n* `'bulk'` - single buffered `console.log()`\r\n* `'null'` - ignore output\r\n\r\nUse custom stream: `stream` \r\n\r\n* any standard `WritableStream`\r\n\r\nFilter internals from stack: `stackFilter` \r\n\r\n* `true` (default) or `false`\r\n\r\n## Examples\r\n\r\nSomething like this (may be outdated):\r\n\r\nOption: `style = 'plain'`\r\n\r\n![plain](https://raw.github.com/Bartvds/mocha-unfunk-reporter/master/media/example_output_default.png)\r\n\r\n-----\r\n\r\nOption: `style = 'ansi'`\r\n\r\n![ansi](https://raw.github.com/Bartvds/mocha-unfunk-reporter/master/media/example_output_color.png)\r\n\r\n\r\n## Compatibility\r\n\r\n### Assertion libraries\r\n\r\nTested with:\r\n\r\n* [Chai Assertion Libary](http://chaijs.com) (best of the best, but no IE < 9)\r\n* [Proclaim](https://github.com/Bartvds/proclaim) (Chai-like `'assert'`, supports IE < 9)\r\n* CommonJS-style `'assert'` (Node.js, browserify etc)\r\n\r\nShould work with any assertion library, like:\r\n\r\n* Expect.js (minimal reporting, use Chai's expect-style)\r\n* Should.js (untested, use Chai's should-style)\r\n\r\nCreate an issue if you got a tip or see bugs.\r\n\r\n### Mocha flavors:\r\n\r\nTesting on:\r\n\r\n* mocha (bin cli)\r\n* [grunt-mocha-test](https://github.com/pghalliday/grunt-mocha-test) (grunt + node)\r\n* grunt-simple-mocha (grunt + node)\r\n* grunt-mocha-spawn (grunt + node)\r\n* grunt-mocha (grunt + phantomJS) (use my [fork](https://github.com/Bartvds/grunt-mocha) until this [pull request](https://github.com/kmiyashiro/grunt-mocha/pull/74) lands)\r\n\r\nKnown to work:\r\n\r\n* grunt-cafe-mocha (grunt + node)\r\n\r\nCreate an issue if you got a tip or request for more.\r\n\r\n## Versions\r\n\r\n* 0.2.0 - added string diff, more assertions and runner compatibility, changed default to `style='ansi'`\r\n* 0.1.13 - fix for grunt-mocha duration stats compatibility\r\n* 0.1.12 - refactored options; added style and writer\r\n* 0.1.11 - added mocha bin command test, improved reporting\r\n* 0.1.10 - objectDiff fix, added option() methods\r\n* 0.1.8 - compatible with grunt-mocha (PhantomJS)\r\n\r\n## Build\r\n\r\nUnfunk-reporter is written in [TypeScript](http://typescript.com) and built using [grunt](http://gruntjs.com).\r\n\r\nInstall development dependencies in your git checkout:\r\n````\r\n$ npm install\r\n````\r\n\r\nYou need the global [grunt](http://gruntjs.com) command:\r\n````\r\n$ npm install grunt-cli -g\r\n````\r\n\r\nBuild and run tests:\r\n````\r\n// self test\r\n$ grunt\r\n\r\n// show some failing tests\r\n$ grunt dev\r\n````\r\n\r\nSee the `Gruntfile` for additional commands, including many mocha runners.\r\n\r\n## Credit\r\n\r\n* Object diff from [objectDiff](https://github.com/NV/objectDiff.js) by Nikita Vasilyev\r\n* Color codes from [colors.js](https://github.com/marak/colors.js/) by Marak Squires & Alexis Sellier (cloudhead)\r\n\r\n## License\r\n\r\nCopyright (c) 2013 Bart van der Schoor\r\n\r\nLicensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "mocha-unfunk-reporter@0.2.0",
  "_from": "mocha-unfunk-reporter@*"
}
